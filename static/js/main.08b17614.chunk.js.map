{"version":3,"sources":["constants.js","components/Fifteen/reducer.js","components/Fifteen/Board/Number/index.js","components/Fifteen/Board/index.js","components/Fifteen/Home/fifteen.jpeg","components/Fifteen/Home/NDAvatar.svg","components/Fifteen/Home/index.js","hooks/useInterval/index.js","components/Fifteen/Timer/index.js","utils/botUtils.js","components/Fifteen/index.js","index.js"],"names":["PLAYERS","selectFrom","lowerValue","upperValue","choices","Math","floor","random","boardNumbers","i","push","value","isUsed","id","initialState","currentPlayer","currentSelections","loser","isGameOver","ACTIONS","reducer","state","action","type","forEach","selection","find","boardNumber","toBeAdded","includes","toBeRemoved","splice","indexOf","Number","number","dispatch","isBotTurn","data-testid","className","classNames","selected","used","onClick","length","React","memo","Board","map","shareData","title","text","url","onShare","a","navigator","share","console","log","Home","startGame","setPlayingAgainstBot","playingAgainstBot","onOpponentSelect","event","target","src","fifteen","alt","name","checked","onChange","htmlFor","href","NDAvatar","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Timer","testTimer","useState","timer","setTimer","shuffleArray","array","j","temp","Fifteen","testBoardNumbers","useReducer","rulesVisible","setRulesVisible","filter","reduce","accumulator","currentValue","isSumOfSelectionsFifteen","sum","numbers","allowedNumbers","numberCount","k","getNumbersWithSumFifteen","index","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08b17614.chunk.js","sourcesContent":["export const FIFTEEN = 15;\n\nexport const PLAYERS = {\n  ONE: 1,\n  TWO: 2,\n};\n","import { PLAYERS } from '../../constants';\n\nfunction selectFrom(lowerValue, upperValue) {\n  var choices = upperValue - lowerValue + 1;\n  return Math.floor(Math.random() * choices + lowerValue);\n}\n\nlet boardNumbers = [];\n\nfor (let i = 0; i < 50; i++) {\n  boardNumbers.push({ value: selectFrom(1, 9), isUsed: false, id: i });\n}\n\nexport const initialState = {\n  boardNumbers,\n  currentPlayer: PLAYERS.ONE,\n  currentSelections: [],\n  loser: '',\n  isGameOver: false,\n};\n\nexport const ACTIONS = {\n  TOGGLE_CURRENT_PLAYER: 5,\n  SET_GAME_OVER: 10,\n  ADD_TO_CURRENT_SELECTIONS: 11,\n  REMOVE_FROM_CURRENT_SELECTIONS: 13,\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.TOGGLE_CURRENT_PLAYER: {\n      const { boardNumbers, currentSelections } = state;\n      currentSelections.forEach(selection => {\n        boardNumbers.find(\n          boardNumber => boardNumber.id === selection\n        ).isUsed = true;\n      });\n      return {\n        ...state,\n        currentSelections: [],\n        currentPlayer:\n          state.currentPlayer === PLAYERS.ONE ? PLAYERS.TWO : PLAYERS.ONE,\n        boardNumbers: [...boardNumbers],\n      };\n    }\n    case ACTIONS.ADD_TO_CURRENT_SELECTIONS:\n      return {\n        ...state,\n        currentSelections: [...state.currentSelections, action.toBeAdded],\n      };\n    case ACTIONS.REMOVE_FROM_CURRENT_SELECTIONS: {\n      const { currentSelections } = state;\n      currentSelections.includes(action.toBeRemoved) &&\n        currentSelections.splice(\n          currentSelections.indexOf(action.toBeRemoved),\n          1\n        );\n      return {\n        ...state,\n        currentSelections: [...currentSelections],\n      };\n    }\n    case ACTIONS.SET_GAME_OVER:\n      return { ...state, isGameOver: true, loser: state.currentPlayer };\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { ACTIONS } from '../../reducer.js';\n\nimport './index.css';\n\nconst Number = ({\n  number: { value, id, isUsed },\n  currentSelections,\n  isGameOver,\n  dispatch,\n  isBotTurn,\n}) => {\n  const onNumberClick = () => {\n    if (isUsed || isBotTurn || isGameOver) {\n      return;\n    }\n\n    if (currentSelections.includes(id)) {\n      dispatch({\n        type: ACTIONS.REMOVE_FROM_CURRENT_SELECTIONS,\n        toBeRemoved: id,\n      });\n      return;\n    }\n\n    if (currentSelections.length < 3) {\n      dispatch({\n        type: ACTIONS.ADD_TO_CURRENT_SELECTIONS,\n        toBeAdded: id,\n      });\n    }\n  };\n  return (\n    <div\n      data-testid={`number-${id}`}\n      className={classNames({\n        number: true,\n        selected: currentSelections.includes(id),\n        used: isUsed,\n      })}\n      onClick={onNumberClick}\n    >\n      {value}\n    </div>\n  );\n};\n\nNumber.propTypes = {\n  number: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    isUsed: PropTypes.bool.isRequired,\n  }).isRequired,\n  currentSelections: PropTypes.arrayOf(PropTypes.number).isRequired,\n  isGameOver: PropTypes.bool.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  isBotTurn: PropTypes.bool.isRequired,\n};\n\nexport default React.memo(Number);\n","import './index.css';\nimport PropTypes from 'prop-types';\n\nimport Number from './Number';\n\nconst Board = ({\n  boardNumbers,\n  currentSelections,\n  dispatch,\n  isGameOver,\n  isBotTurn,\n}) => {\n  return (\n    <div className=\"board\" data-testid=\"board\">\n      {boardNumbers.map(number => (\n        <Number\n          key={number.id}\n          isGameOver={isGameOver}\n          number={number}\n          currentSelections={currentSelections}\n          dispatch={dispatch}\n          isBotTurn={isBotTurn}\n        />\n      ))}\n    </div>\n  );\n};\n\nBoard.propTypes = {\n  boardNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      isUsed: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  currentSelections: PropTypes.arrayOf(PropTypes.number).isRequired,\n  isGameOver: PropTypes.bool.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  isBotTurn: PropTypes.bool.isRequired,\n};\n\nexport default Board;\n","export default __webpack_public_path__ + \"static/media/fifteen.1b19e599.jpeg\";","export default __webpack_public_path__ + \"static/media/NDAvatar.9548e391.svg\";","import PropTypes from 'prop-types';\nimport { ShareIcon, HeartIcon } from '@heroicons/react/solid';\n\nimport fifteen from './fifteen.jpeg';\nimport NDAvatar from './NDAvatar.svg';\n\nimport './index.css';\n\nconst shareData = {\n  title: 'Fifteen',\n  text: 'A simple 2 player game.',\n  url: 'https://www.niranjanborawake.in/fifteen/',\n};\n\nconst onShare = async () => {\n  try {\n    await navigator.share(shareData);\n  } catch (err) {\n    console.log('Error sharing');\n  }\n};\n\nconst Home = ({ startGame, setPlayingAgainstBot, playingAgainstBot }) => {\n  const canShare = true || !!navigator.share;\n\n  const onOpponentSelect = event => {\n    setPlayingAgainstBot(event.target.value === 'bot');\n  };\n\n  return (\n    <div className=\"home\">\n      <div className=\"banner\">\n        <img src={fifteen} alt=\"15\"></img>\n      </div>\n      <div className=\"details\">\n        <div className=\"rules\">\n          <p>\n            Players take it in turns to select 2 or 3 circles that total 15 in\n            15s.\n          </p>\n          <p>\n            A player could select 2 circles, e.g. 7 and 8 or 3 circles, e.g. 4,\n            5 and 6.\n          </p>\n          <p>The last player who selects a combination of 15 is the winner.</p>\n        </div>\n        <div className=\"controls\">\n          <div className=\"opponent\">\n            <span>Play against : </span>\n            <input\n              id=\"bot\"\n              type=\"radio\"\n              name=\"againstBot\"\n              value=\"bot\"\n              checked={playingAgainstBot}\n              onChange={onOpponentSelect}\n            ></input>\n            <label htmlFor=\"bot\">Bot</label>\n            <input\n              id=\"friend\"\n              type=\"radio\"\n              name=\"againstBot\"\n              value=\"friend\"\n              checked={!playingAgainstBot}\n              onChange={onOpponentSelect}\n            ></input>\n            <label htmlFor=\"friend\">Friend</label>\n          </div>\n          <button onClick={startGame}>START</button>\n        </div>\n        <div className=\"social\">\n          <a href=\"https://twitter.com/niranjandb\" className=\"built-by\">\n            <img className=\"avatar\" src={NDAvatar}></img>\n          </a>\n          <div className=\"like-and-share\">\n            <a href=\"https://twitter.com/niranjandb\">\n              <HeartIcon className=\"icon\" />\n            </a>\n            {canShare && <ShareIcon className=\"icon\" onClick={onShare} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  startGame: PropTypes.func.isRequired,\n  setPlayingAgainstBot: PropTypes.func.isRequired,\n  playingAgainstBot: PropTypes.bool.isRequired,\n};\n\nexport default Home;\n","/**\n * This hook is copied from - https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n */\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ACTIONS } from '../reducer.js';\nimport { PLAYERS, FIFTEEN } from '../../../constants.js';\nimport useInterval from '../../../hooks/useInterval';\n\nimport './index.css';\n\nconst Timer = ({ dispatch, currentPlayer, testTimer }) => {\n  const [timer, setTimer] = useState(testTimer || FIFTEEN);\n  useEffect(() => {\n    if (timer === 0) {\n      dispatch({ type: ACTIONS.SET_GAME_OVER });\n    }\n  }, [dispatch, timer]);\n\n  useInterval(() => {\n    if (timer > 0) {\n      setTimer(timer - 1);\n    }\n  }, 1000);\n\n  return (\n    <label\n      data-testid={`timer-player-${currentPlayer}`}\n      className={`timer player-${currentPlayer}`}\n    >\n      {`00:${timer < 10 ? '0' + timer : timer}`}\n    </label>\n  );\n};\n\nTimer.propTypes = {\n  currentPlayer: PropTypes.oneOf([PLAYERS.ONE, PLAYERS.TWO]),\n  dispatch: PropTypes.func.isRequired,\n  testTimer: PropTypes.number,\n};\n\nexport default Timer;\n","import { FIFTEEN } from '../constants';\n\nconst shuffleArray = array => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\nexport const getNumbersWithSumFifteen = (boardNumbers, sum = FIFTEEN) => {\n  let numbers = [];\n  const allowedNumbers = shuffleArray(\n    boardNumbers.filter(boardNumber => !boardNumber.isUsed)\n  );\n  const numberCount = allowedNumbers.length;\n  for (let i = 0; i < numberCount - 2; i++) {\n    for (let j = i + 1; j < numberCount - 1; j++) {\n      for (let k = j + 1; k < numberCount; k++) {\n        if (\n          allowedNumbers[i].value +\n            allowedNumbers[j].value +\n            allowedNumbers[k].value ==\n          sum\n        ) {\n          numbers.push(allowedNumbers[i]);\n          numbers.push(allowedNumbers[j]);\n          numbers.push(allowedNumbers[k]);\n          return numbers;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < numberCount - 1; i++) {\n    for (let j = i + 1; j < numberCount - 0; j++) {\n      if (allowedNumbers[i].value + allowedNumbers[j].value === sum) {\n        numbers.push(allowedNumbers[i]);\n        numbers.push(allowedNumbers[j]);\n        return numbers;\n      }\n    }\n  }\n  return numbers;\n};\n","import { useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PLAYERS, FIFTEEN } from '../../constants.js';\nimport { initialState, reducer, ACTIONS } from './reducer.js';\nimport Board from './Board';\nimport Home from './Home';\nimport Timer from './Timer';\n\nimport './index.css';\nimport { getNumbersWithSumFifteen } from '../../utils/botUtils.js';\n\nconst isSumOfSelectionsFifteen = (currentSelections, boardNumbers) => {\n  return (\n    boardNumbers\n      .filter(({ id }) => currentSelections.includes(id))\n      .map(({ value }) => value)\n      .reduce((accumulator, currentValue) => accumulator + currentValue, 0) ===\n    FIFTEEN\n  );\n};\n\nconst Fifteen = ({ testBoardNumbers }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [rulesVisible, setRulesVisible] = useState(true);\n  const [playingAgainstBot, setPlayingAgainstBot] = useState(true);\n  const {\n    boardNumbers,\n    currentPlayer,\n    currentSelections,\n    loser,\n    isGameOver,\n  } = state;\n\n  const isBotTurn = () =>\n    !!(playingAgainstBot && currentPlayer === PLAYERS.TWO);\n\n  useEffect(() => {\n    if (isSumOfSelectionsFifteen(currentSelections, boardNumbers)) {\n      dispatch({ type: ACTIONS.TOGGLE_CURRENT_PLAYER });\n    }\n  }, [currentSelections, boardNumbers]);\n\n  useEffect(() => {\n    if (currentPlayer === PLAYERS.TWO && playingAgainstBot) {\n      const numbers = getNumbersWithSumFifteen(boardNumbers);\n      numbers.forEach(({ id }, index) => {\n        setTimeout(() => {\n          dispatch({\n            type: ACTIONS.ADD_TO_CURRENT_SELECTIONS,\n            toBeAdded: id,\n          });\n        }, 2000 * (index + 1));\n      });\n    }\n  }, [currentPlayer, playingAgainstBot, boardNumbers]);\n\n  if (rulesVisible) {\n    return (\n      <Home\n        startGame={() => setRulesVisible(false)}\n        setPlayingAgainstBot={setPlayingAgainstBot}\n        playingAgainstBot={playingAgainstBot}\n      />\n    );\n  }\n\n  return (\n    <div className={`fifteen player-${currentPlayer}`}>\n      <div className=\"result-and-timer\">\n        {isGameOver && (\n          <div data-testid=\"game-result-player-2\" className=\"player-2\">\n            {loser === PLAYERS.TWO ? 'You Lost' : 'You Won'}\n          </div>\n        )}\n        {currentPlayer === PLAYERS.ONE && !isGameOver && (\n          <Timer currentPlayer={currentPlayer} dispatch={dispatch} />\n        )}\n      </div>\n      <Board\n        isGameOver={isGameOver}\n        dispatch={dispatch}\n        currentSelections={currentSelections}\n        boardNumbers={testBoardNumbers || boardNumbers}\n        isBotTurn={isBotTurn()}\n      />\n      <div className=\"result-and-timer\">\n        {isGameOver && (\n          <div data-testid=\"game-result-player-1\" className=\"player-1\">\n            {loser === PLAYERS.ONE ? 'You Lost' : 'You Won'}\n          </div>\n        )}\n        {currentPlayer === PLAYERS.TWO && !isGameOver && (\n          <Timer currentPlayer={currentPlayer} dispatch={dispatch} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nFifteen.propTypes = {\n  testBoardNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      isUsed: PropTypes.bool.isRequired,\n    })\n  ),\n};\nexport default Fifteen;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Fifteen from './components/Fifteen';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Fifteen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}