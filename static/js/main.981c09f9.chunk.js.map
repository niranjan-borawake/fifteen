{"version":3,"sources":["components/Fifteen/Board/Number/index.js","components/Fifteen/Board/index.js","components/Fifteen/Rules/fifteen.jpeg","components/Fifteen/Rules/index.js","hooks/useInterval/index.js","components/Fifteen/Timer/index.js","components/Fifteen/index.js","reportWebVitals.js","index.js"],"names":["Number","number","value","id","isUsed","currentSelections","dispatch","isGameOver","className","classNames","selected","includes","used","onClick","type","ACTIONS","REMOVE_FROM_CURRENT_SELECTIONS","toBeRemoved","length","ADD_TO_CURRENT_SELECTIONS","toBeAdded","React","memo","Board","boardNumbers","map","Rules","startGame","src","fifteen","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Timer","currentPlayer","useState","timer","setTimer","SET_GAME_OVER","PLAYERS","selectFrom","lowerValue","upperValue","choices","Math","floor","random","i","push","initialState","loser","TOGGLE_CURRENT_PLAYER","reducer","state","action","forEach","selection","find","boardNumber","splice","indexOf","Fifteen","useReducer","rulesVisible","setRulesVisible","filter","reduce","accumulator","currentValue","isSumOfSelectionsFifteen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.981c09f9.chunk.js","sourcesContent":["import './index.css';\nimport { ACTIONS } from '../..';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nconst Number = ({\n  number: { value, id, isUsed },\n  currentSelections,\n  dispatch,\n  isGameOver,\n}) => {\n  const onNumberClick = () => {\n    if (isUsed || isGameOver) {\n      return;\n    }\n\n    if (currentSelections.includes(id)) {\n      dispatch({\n        type: ACTIONS.REMOVE_FROM_CURRENT_SELECTIONS,\n        toBeRemoved: id,\n      });\n      return;\n    }\n\n    if (currentSelections.length < 3) {\n      dispatch({\n        type: ACTIONS.ADD_TO_CURRENT_SELECTIONS,\n        toBeAdded: id,\n      });\n    }\n  };\n  return (\n    <div\n      className={classNames({\n        number: true,\n        selected: currentSelections.includes(id),\n        used: isUsed,\n      })}\n      onClick={onNumberClick}\n    >\n      {value}\n    </div>\n  );\n};\nNumber.propTypes = {\n  addToSelections: PropTypes.func.isRequired,\n};\n// function areEqual(prevProps, nextProps) {\n//   return (\n//     prevProps.number.isUsed === nextProps.number.isUsed &&\n//     prevProps.currentSelections.includes(prevProps.number.id) ===\n//       nextProps.currentSelections.includes(nextProps.number.id)\n//   );\n// }\nexport default React.memo(Number);\n","import './index.css';\nimport Number from './Number';\n\nconst Board = ({ boardNumbers, currentSelections, dispatch, isGameOver }) => {\n  return (\n    <div className=\"board\">\n      {boardNumbers.map(number => (\n        <Number\n          isGameOver={isGameOver}\n          number={number}\n          currentSelections={currentSelections}\n          dispatch={dispatch}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","export default __webpack_public_path__ + \"static/media/fifteen.1b19e599.jpeg\";","import './index.css';\nimport fifteen from './fifteen.jpeg';\n\nconst Rules = ({ startGame }) => {\n  return (\n    <div className=\"home\">\n      <img src={fifteen} className=\"banner\"></img>\n      <div className=\"rules\">\n        <p>\n          Players take it in turns to select 2 or 3 circles that total 15 in\n          15s.\n        </p>\n        <p>\n          A player could select 2 circles, e.g. 7 and 8 or 3 circles, e.g. 4, 5\n          and 6.\n        </p>\n        <p>The last player who selects a combination of 15 is the winner.</p>\n        <button onClick={startGame}>OK</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Rules;\n","/**\n * This hook is copied from - https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n */\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import './index.css';\nimport { useEffect, useState } from 'react';\nimport { ACTIONS } from '../../Fifteen';\nimport useInterval from '../../../hooks/useInterval';\n\nconst Timer = ({ dispatch, currentPlayer }) => {\n  const [timer, setTimer] = useState(15);\n  useEffect(() => {\n    if (timer === 0) {\n      dispatch({ type: ACTIONS.SET_GAME_OVER });\n    }\n  }, [dispatch, timer]);\n\n  useInterval(() => {\n    if (timer > 0) {\n      setTimer(timer - 1);\n    }\n  }, 1000);\n\n  return (\n    <label className={`timer player-${currentPlayer}`}>\n      {`00:${timer < 10 ? '0' + timer : timer}`}{' '}\n    </label>\n  );\n};\n\nexport default Timer;\n","import './index.css';\nimport { useEffect, useReducer, useState } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport Timer from './Timer';\n\nconst PLAYERS = {\n  ONE: 1,\n  TWO: 2,\n};\nfunction selectFrom(lowerValue, upperValue) {\n  var choices = upperValue - lowerValue + 1;\n  return Math.floor(Math.random() * choices + lowerValue);\n}\nlet boardNumbers = [];\nfor (let i = 0; i < 50; i++) {\n  boardNumbers.push({ value: selectFrom(1, 9), isUsed: false, id: i });\n}\nconst initialState = {\n  boardNumbers,\n  currentPlayer: PLAYERS.ONE,\n  currentSelections: [],\n  loser: '',\n  isGameOver: false,\n};\nexport const ACTIONS = {\n  TOGGLE_CURRENT_PLAYER: 5,\n  SET_GAME_OVER: 10,\n  ADD_TO_CURRENT_SELECTIONS: 11,\n  REMOVE_FROM_CURRENT_SELECTIONS: 13,\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.TOGGLE_CURRENT_PLAYER: {\n      const { boardNumbers, currentSelections } = state;\n      currentSelections.forEach(selection => {\n        boardNumbers.find(\n          boardNumber => boardNumber.id === selection\n        ).isUsed = true;\n      });\n      return {\n        ...state,\n        currentSelections: [],\n        currentPlayer:\n          state.currentPlayer === PLAYERS.ONE ? PLAYERS.TWO : PLAYERS.ONE,\n        boardNumbers: [...boardNumbers],\n      };\n    }\n    case ACTIONS.ADD_TO_CURRENT_SELECTIONS:\n      return {\n        ...state,\n        currentSelections: [...state.currentSelections, action.toBeAdded],\n      };\n    case ACTIONS.REMOVE_FROM_CURRENT_SELECTIONS: {\n      const { currentSelections } = state;\n      currentSelections.includes(action.toBeRemoved) &&\n        currentSelections.splice(\n          currentSelections.indexOf(action.toBeRemoved),\n          1\n        );\n      return {\n        ...state,\n        currentSelections: [...currentSelections],\n      };\n    }\n    case ACTIONS.SET_GAME_OVER:\n      return { ...state, isGameOver: true, loser: state.currentPlayer };\n  }\n};\nconst isSumOfSelectionsFifteen = (currentSelections, boardNumbers) => {\n  return (\n    boardNumbers\n      .filter(({ id }) => currentSelections.includes(id))\n      .map(({ value }) => value)\n      .reduce((accumulator, currentValue) => accumulator + currentValue, 0) ===\n    15\n  );\n};\nconst Fifteen = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [rulesVisible, setRulesVisible] = useState(true);\n  const {\n    boardNumbers,\n    currentPlayer,\n    currentSelections,\n    loser,\n    isGameOver,\n  } = state;\n  useEffect(() => {\n    if (isSumOfSelectionsFifteen(currentSelections, boardNumbers)) {\n      dispatch({ type: ACTIONS.TOGGLE_CURRENT_PLAYER });\n    }\n  }, [currentSelections, boardNumbers]);\n\n  if (rulesVisible) {\n    return <Rules startGame={() => setRulesVisible(false)} />;\n  }\n  return (\n    <div className={`fifteen player-${currentPlayer}`}>\n      <div className=\"result-and-timer\">\n        {isGameOver && (\n          <div className=\"player-2\">\n            {loser === PLAYERS.TWO ? 'You Lost' : 'You Won'}\n          </div>\n        )}\n        {currentPlayer === PLAYERS.ONE && !isGameOver && (\n          <Timer\n            currentPlayer={currentPlayer}\n            isGameOver={isGameOver}\n            dispatch={dispatch}\n          />\n        )}\n      </div>\n      <Board\n        isGameOver={isGameOver}\n        dispatch={dispatch}\n        currentSelections={currentSelections}\n        boardNumbers={boardNumbers}\n      />\n      <div className=\"result-and-timer\">\n        {isGameOver && (\n          <div className=\"player-1\">\n            {loser === PLAYERS.ONE ? 'You Lost' : 'You Won'}\n          </div>\n        )}\n        {currentPlayer === PLAYERS.TWO && !isGameOver && (\n          <Timer\n            currentPlayer={currentPlayer}\n            isGameOver={isGameOver}\n            dispatch={dispatch}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Fifteen;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport Fifteen from './components/Fifteen';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Fifteen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}