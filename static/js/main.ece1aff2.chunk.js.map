{"version":3,"sources":["constants.js","utils/botUtils.js","components/Fifteen/reducer.js","components/Fifteen/Board/Number/index.js","components/Fifteen/Board/index.js","components/Fifteen/Home/fifteen.jpeg","components/Fifteen/Home/NDAvatar.svg","components/Fifteen/Home/index.js","hooks/useInterval/index.js","components/Fifteen/Timer/index.js","components/Fifteen/Winner/index.js","components/Fifteen/Confetti/index.js","components/Fifteen/index.js","serviceWorkerRegistration.js","index.js"],"names":["FIFTEEN","PLAYERS","ONE","TWO","shuffleArray","array","i","length","j","Math","floor","random","temp","selectFrom","lowerValue","upperValue","choices","getBoardNumbers","boardNumbers","push","value","isUsed","id","getInitialState","currentPlayer","currentSelections","loser","isGameOver","ACTIONS","reducer","state","action","type","forEach","selection","find","boardNumber","toBeAdded","includes","toBeRemoved","splice","indexOf","Number","number","dispatch","isBotTurn","data-testid","className","classNames","selected","used","onClick","React","memo","Board","map","shareData","title","text","url","onShare","a","navigator","share","console","log","Home","startGame","setPlayingAgainstBot","playingAgainstBot","onOpponentSelect","event","target","src","fifteen","alt","name","checked","onChange","htmlFor","href","NDAvatar","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Timer","testTimer","useState","timer","setTimer","require","Winner","Confetti","styles","rotation","right","max","document","documentElement","clientWidth","window","innerWidth","top","clientHeight","innerHeight","colors","color","style","backgroundColor","transform","animationDelay","getStyles","index","Fifteen","testBoardNumbers","useReducer","rulesVisible","setRulesVisible","filter","reduce","accumulator","currentValue","isSumOfSelectionsFifteen","sum","numbers","allowedNumbers","numberCount","k","getNumbersWithSumFifteen","setTimeout","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ece1aff2.chunk.js","sourcesContent":["export const FIFTEEN = 15;\n\nexport const PLAYERS = {\n  ONE: 1,\n  TWO: 2,\n};\n","import { FIFTEEN } from '../constants';\n\nconst shuffleArray = array => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\nexport const getNumbersWithSumFifteen = (boardNumbers, sum = FIFTEEN) => {\n  let numbers = [];\n  const allowedNumbers = shuffleArray(\n    boardNumbers.filter(boardNumber => !boardNumber.isUsed)\n  );\n  const numberCount = allowedNumbers.length;\n  for (let i = 0; i < numberCount - 2; i++) {\n    for (let j = i + 1; j < numberCount - 1; j++) {\n      for (let k = j + 1; k < numberCount; k++) {\n        if (\n          allowedNumbers[i].value +\n            allowedNumbers[j].value +\n            allowedNumbers[k].value ==\n          sum\n        ) {\n          numbers.push(allowedNumbers[i]);\n          numbers.push(allowedNumbers[j]);\n          numbers.push(allowedNumbers[k]);\n          return numbers;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < numberCount - 1; i++) {\n    for (let j = i + 1; j < numberCount - 0; j++) {\n      if (allowedNumbers[i].value + allowedNumbers[j].value === sum) {\n        numbers.push(allowedNumbers[i]);\n        numbers.push(allowedNumbers[j]);\n        return numbers;\n      }\n    }\n  }\n  return numbers;\n};\n","import { PLAYERS } from '../../constants';\n\nfunction selectFrom(lowerValue, upperValue) {\n  var choices = upperValue - lowerValue + 1;\n  return Math.floor(Math.random() * choices + lowerValue);\n}\n\nconst getBoardNumbers = () => {\n  let boardNumbers = [];\n\n  for (let i = 0; i < 50; i++) {\n    boardNumbers.push({ value: selectFrom(1, 9), isUsed: false, id: i });\n  }\n  return boardNumbers;\n};\n\nexport const getInitialState = () => ({\n  boardNumbers: getBoardNumbers(),\n  currentPlayer: PLAYERS.ONE,\n  currentSelections: [],\n  loser: '',\n  isGameOver: false,\n});\n\nexport const ACTIONS = {\n  TOGGLE_CURRENT_PLAYER: 1,\n  SET_GAME_OVER: 2,\n  ADD_TO_CURRENT_SELECTIONS: 3,\n  REMOVE_FROM_CURRENT_SELECTIONS: 4,\n  RE_START: 5,\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.RE_START:\n      return {\n        ...getInitialState(),\n      };\n    case ACTIONS.TOGGLE_CURRENT_PLAYER: {\n      const { boardNumbers, currentSelections } = state;\n      currentSelections.forEach(selection => {\n        boardNumbers.find(\n          boardNumber => boardNumber.id === selection\n        ).isUsed = true;\n      });\n      return {\n        ...state,\n        currentSelections: [],\n        currentPlayer:\n          state.currentPlayer === PLAYERS.ONE ? PLAYERS.TWO : PLAYERS.ONE,\n        boardNumbers: [...boardNumbers],\n      };\n    }\n    case ACTIONS.ADD_TO_CURRENT_SELECTIONS:\n      return {\n        ...state,\n        currentSelections: [...state.currentSelections, action.toBeAdded],\n      };\n    case ACTIONS.REMOVE_FROM_CURRENT_SELECTIONS: {\n      const { currentSelections } = state;\n      currentSelections.includes(action.toBeRemoved) &&\n        currentSelections.splice(\n          currentSelections.indexOf(action.toBeRemoved),\n          1\n        );\n      return {\n        ...state,\n        currentSelections: [...currentSelections],\n      };\n    }\n    case ACTIONS.SET_GAME_OVER:\n      return { ...state, isGameOver: true, loser: state.currentPlayer };\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { ACTIONS } from '../../reducer.js';\n\nimport './index.css';\n\nconst Number = ({\n  number: { value, id, isUsed },\n  currentSelections,\n  isGameOver,\n  dispatch,\n  isBotTurn,\n}) => {\n  const onNumberClick = () => {\n    if (isUsed || isBotTurn || isGameOver) {\n      return;\n    }\n\n    if (currentSelections.includes(id)) {\n      dispatch({\n        type: ACTIONS.REMOVE_FROM_CURRENT_SELECTIONS,\n        toBeRemoved: id,\n      });\n      return;\n    }\n\n    if (currentSelections.length < 3) {\n      dispatch({\n        type: ACTIONS.ADD_TO_CURRENT_SELECTIONS,\n        toBeAdded: id,\n      });\n    }\n  };\n  return (\n    <div\n      data-testid={`number-${id}`}\n      className={classNames({\n        number: true,\n        selected: currentSelections.includes(id),\n        used: isUsed,\n      })}\n      onClick={onNumberClick}\n    >\n      {value}\n    </div>\n  );\n};\n\nNumber.propTypes = {\n  number: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    isUsed: PropTypes.bool.isRequired,\n  }).isRequired,\n  currentSelections: PropTypes.arrayOf(PropTypes.number).isRequired,\n  isGameOver: PropTypes.bool.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  isBotTurn: PropTypes.bool.isRequired,\n};\n\nexport default React.memo(Number);\n","import './index.css';\nimport PropTypes from 'prop-types';\n\nimport Number from './Number';\n\nconst Board = ({\n  boardNumbers,\n  currentSelections,\n  dispatch,\n  isGameOver,\n  isBotTurn,\n}) => {\n  return (\n    <div className=\"board\" data-testid=\"board\">\n      {boardNumbers.map(number => (\n        <Number\n          key={number.id}\n          isGameOver={isGameOver}\n          number={number}\n          currentSelections={currentSelections}\n          dispatch={dispatch}\n          isBotTurn={isBotTurn}\n        />\n      ))}\n    </div>\n  );\n};\n\nBoard.propTypes = {\n  boardNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      isUsed: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  currentSelections: PropTypes.arrayOf(PropTypes.number).isRequired,\n  isGameOver: PropTypes.bool.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  isBotTurn: PropTypes.bool.isRequired,\n};\n\nexport default Board;\n","export default __webpack_public_path__ + \"static/media/fifteen.1b19e599.jpeg\";","export default __webpack_public_path__ + \"static/media/NDAvatar.9548e391.svg\";","import PropTypes from 'prop-types';\nimport { ShareIcon, HeartIcon } from '@heroicons/react/solid';\n\nimport fifteen from './fifteen.jpeg';\nimport NDAvatar from './NDAvatar.svg';\n\nimport './index.css';\n\nconst shareData = {\n  title: 'Fifteen',\n  text: 'A simple 2 player game.',\n  url: 'https://www.niranjanborawake.in/fifteen/',\n};\n\nconst onShare = async () => {\n  try {\n    await navigator.share(shareData);\n  } catch (err) {\n    console.log('Error sharing');\n  }\n};\n\nconst Home = ({ startGame, setPlayingAgainstBot, playingAgainstBot }) => {\n  const canShare = true || !!navigator.share;\n\n  const onOpponentSelect = event => {\n    setPlayingAgainstBot(event.target.value === 'bot');\n  };\n\n  return (\n    <div className=\"home\">\n      <div className=\"banner\">\n        <img src={fifteen} alt=\"15\"></img>\n      </div>\n      <div className=\"details\">\n        <div className=\"rules\">\n          <p>\n            Players take it in turns to select 2 or 3 circles that total 15 in\n            15s.\n          </p>\n          <p>\n            A player could select 2 circles, e.g. 7 and 8 or 3 circles, e.g. 4,\n            5 and 6.\n          </p>\n          <p>The last player who selects a combination of 15 is the winner.</p>\n        </div>\n        <div className=\"controls\">\n          <div className=\"opponent\">\n            <span>Play against : </span>\n            <input\n              id=\"bot\"\n              type=\"radio\"\n              name=\"againstBot\"\n              value=\"bot\"\n              checked={playingAgainstBot}\n              onChange={onOpponentSelect}\n            ></input>\n            <label htmlFor=\"bot\">Bot</label>\n            <input\n              id=\"friend\"\n              type=\"radio\"\n              name=\"againstBot\"\n              value=\"friend\"\n              checked={!playingAgainstBot}\n              onChange={onOpponentSelect}\n            ></input>\n            <label htmlFor=\"friend\">Friend</label>\n          </div>\n          <button onClick={startGame}>START</button>\n        </div>\n        <div className=\"social\">\n          <a href=\"https://twitter.com/niranjandb\" className=\"built-by\">\n            <img className=\"avatar\" src={NDAvatar}></img>\n          </a>\n          <div className=\"like-and-share\">\n            <a href=\"https://twitter.com/niranjandb/status/1390756922987454466?s=20\">\n              <HeartIcon className=\"icon\" />\n            </a>\n            {canShare && <ShareIcon className=\"icon\" onClick={onShare} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  startGame: PropTypes.func.isRequired,\n  setPlayingAgainstBot: PropTypes.func.isRequired,\n  playingAgainstBot: PropTypes.bool.isRequired,\n};\n\nexport default Home;\n","/**\n * This hook is copied from - https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n */\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ACTIONS } from '../reducer.js';\nimport { PLAYERS, FIFTEEN } from '../../../constants.js';\nimport useInterval from '../../../hooks/useInterval';\n\nimport './index.css';\n\nconst Timer = ({ dispatch, currentPlayer, testTimer }) => {\n  const [timer, setTimer] = useState(testTimer || FIFTEEN);\n  useEffect(() => {\n    if (timer === 0) {\n      dispatch({ type: ACTIONS.SET_GAME_OVER });\n    }\n  }, [dispatch, timer]);\n\n  useInterval(() => {\n    if (timer > 0) {\n      setTimer(timer - 1);\n    }\n  }, 1000);\n\n  return (\n    <label\n      data-testid={`timer-player-${currentPlayer}`}\n      className={`timer player-${currentPlayer}`}\n    >\n      {timer}\n    </label>\n  );\n};\n\nTimer.propTypes = {\n  currentPlayer: PropTypes.oneOf([PLAYERS.ONE, PLAYERS.TWO]),\n  dispatch: PropTypes.func.isRequired,\n  testTimer: PropTypes.number,\n};\n\nexport default Timer;\n","const { FIFTEEN } = require('../../../constants');\n\nimport './index.css';\n\nconst Winner = () => {\n  return (\n    <div className=\"winner\">\n      <div>\n        <div className=\"jump\">{FIFTEEN}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Winner;\n","// import { useEffect } from 'react';\nimport './index.css';\n\nconst getStyles = () => {\n  const styles = [];\n  for (let i = 0; i < 100; i++) {\n    var rotation = Math.floor(Math.random() * 360);\n    var right = Math.floor(\n      Math.random() *\n        Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n    );\n    var top = Math.floor(\n      Math.random() *\n        Math.max(\n          document.documentElement.clientHeight,\n          window.innerHeight || 500\n        )\n    );\n    var delay = Math.floor(Math.random() * 15);\n\n    var colors = [\n      '#8d6e63',\n      '#795548',\n      '#6d4c41',\n      '#5d4037',\n      '#4e342e',\n      '#3e2723',\n    ];\n    var color = colors[Math.floor(Math.random() * colors.length)];\n\n    const style = {};\n    style.top = top + 'px';\n    style.right = right + 'px';\n    style.backgroundColor = color;\n    style.transform = 'skew(15deg) rotate(' + rotation + 'deg)';\n    style.animationDelay = delay + 's';\n    styles.push(style);\n  }\n  return styles;\n};\nconst Confetti = () => {\n  const styles = getStyles();\n  return (\n    <div className=\"confetti-wrapper\">\n      {styles.map((style, index) => (\n        <div key={index} className=\"confetti\" style={style}></div>\n      ))}\n    </div>\n  );\n};\n\nexport default Confetti;\n","import { useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { HomeIcon, RefreshIcon } from '@heroicons/react/solid';\n\nimport { PLAYERS, FIFTEEN } from '../../constants.js';\nimport { getNumbersWithSumFifteen } from '../../utils/botUtils.js';\nimport { getInitialState, reducer, ACTIONS } from './reducer.js';\nimport Board from './Board';\nimport Home from './Home';\nimport Timer from './Timer';\n\nimport Winner from './Winner/index.js';\n\nimport './index.css';\nimport Confetti from './Confetti/index.js';\nimport classNames from 'classnames';\n\nconst isSumOfSelectionsFifteen = (currentSelections, boardNumbers) => {\n  return (\n    boardNumbers\n      .filter(({ id }) => currentSelections.includes(id))\n      .map(({ value }) => value)\n      .reduce((accumulator, currentValue) => accumulator + currentValue, 0) ===\n    FIFTEEN\n  );\n};\n\nconst Fifteen = ({ testBoardNumbers }) => {\n  const [state, dispatch] = useReducer(reducer, getInitialState());\n  const [rulesVisible, setRulesVisible] = useState(true);\n  const [playingAgainstBot, setPlayingAgainstBot] = useState(true);\n  const {\n    boardNumbers,\n    currentPlayer,\n    currentSelections,\n    loser,\n    isGameOver,\n  } = state;\n\n  const gotoHome = () => {\n    dispatch({ type: ACTIONS.RE_START });\n    setRulesVisible(true);\n  };\n\n  const reStart = () => {\n    dispatch({ type: ACTIONS.RE_START });\n  };\n\n  const isBotTurn = () =>\n    !!(playingAgainstBot && currentPlayer === PLAYERS.TWO);\n\n  useEffect(() => {\n    if (isSumOfSelectionsFifteen(currentSelections, boardNumbers)) {\n      dispatch({ type: ACTIONS.TOGGLE_CURRENT_PLAYER });\n    }\n  }, [currentSelections, boardNumbers]);\n\n  useEffect(() => {\n    if (currentPlayer === PLAYERS.TWO && playingAgainstBot) {\n      const numbers = getNumbersWithSumFifteen(boardNumbers);\n      numbers.forEach(({ id }, index) => {\n        setTimeout(() => {\n          dispatch({\n            type: ACTIONS.ADD_TO_CURRENT_SELECTIONS,\n            toBeAdded: id,\n          });\n        }, 2000 * (index + 1));\n      });\n    }\n  }, [currentPlayer, playingAgainstBot, boardNumbers]);\n\n  if (rulesVisible) {\n    return (\n      <Home\n        startGame={() => setRulesVisible(false)}\n        setPlayingAgainstBot={setPlayingAgainstBot}\n        playingAgainstBot={playingAgainstBot}\n      />\n    );\n  }\n\n  return (\n    <div className={`fifteen player-${currentPlayer}`}>\n      {isGameOver && <Confetti />}\n      <div className=\"result-and-timer\">\n        {isGameOver && (\n          <div data-testid=\"game-result-player-2\" className=\"player-2\">\n            {loser === PLAYERS.TWO ? '0' : <Winner />}\n          </div>\n        )}\n        {!isGameOver &&\n          (currentPlayer === PLAYERS.TWO ? (\n            <Timer currentPlayer={currentPlayer} dispatch={dispatch} />\n          ) : (\n            <label className=\"player-2\">15</label>\n          ))}\n      </div>\n      <Board\n        isGameOver={isGameOver}\n        dispatch={dispatch}\n        currentSelections={currentSelections}\n        boardNumbers={testBoardNumbers || boardNumbers}\n        isBotTurn={isBotTurn()}\n      />\n      <div\n        className={classNames({\n          'result-and-timer': true,\n          'game-over': isGameOver,\n        })}\n      >\n        {isGameOver && <HomeIcon className=\"icon\" onClick={gotoHome} />}\n        {isGameOver && (\n          <div data-testid=\"game-result-player-1\" className=\"player-1\">\n            {loser === PLAYERS.ONE ? '0' : <Winner />}\n          </div>\n        )}\n        {!isGameOver &&\n          (currentPlayer === PLAYERS.ONE ? (\n            <Timer currentPlayer={currentPlayer} dispatch={dispatch} />\n          ) : (\n            <label className=\"player-1\">15</label>\n          ))}\n        {isGameOver && <RefreshIcon className=\"icon\" onClick={reStart} />}\n      </div>\n    </div>\n  );\n};\n\nFifteen.propTypes = {\n  testBoardNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      isUsed: PropTypes.bool.isRequired,\n    })\n  ),\n};\nexport default Fifteen;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Fifteen from './components/Fifteen';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Fifteen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}